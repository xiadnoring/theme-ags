@use "sass:map";
@use "sass:color";
@use './material' as *;
@use './colors' as *;

// Common colors
$hovercolor: $surfaceContainerHigh;
$activecolor: $surfaceContainerHighest;
$rounding_verysmall: 0.477rem;
$rounding_small: 0.818rem;
$rounding_mediumsmall: 0.955rem;
$rounding_medium: 1.159rem;
$rounding_mediumlarge: 1.364rem;
$rounding_large: 1.705rem;

// Common rules
@mixin small-rounding {
    border-radius: $rounding_small;
    -gtk-outline-radius: $rounding_small;
}

@mixin normal-rounding {
    border-radius: $rounding_medium;
    -gtk-outline-radius: $rounding_medium;
}

@mixin large-rounding {
    border-radius: $rounding_large;
    -gtk-outline-radius: $rounding_large;
}

@mixin full-rounding {
    border-radius: 9999px;
    -gtk-outline-radius: 9999px;
}

// @mixin symbolic-icon {
//    -gtk-icon-theme: 'Adwaita';
// }

@mixin titlefont {
    // Geometric sans-serif
    font-family: "Gabarito", "Poppins", "Readex Pro", "Lexend", sans-serif;
}

@mixin mainfont {
    // Other clean sans-serif
    font-family: "Rubik", "Geist", "AR One Sans", "Reddit Sans", "Inter",
        "Roboto", "Ubuntu", "Noto Sans", sans-serif;
    // font-weight: 500;
}

@mixin icon-material {
    // Material Design Icons
    font-family: "Material Symbols Rounded", "MaterialSymbolsRounded", "Material Symbols Outlined",
        "Material Symbols Sharp";
}

@mixin icon-nerd {
    // Nerd Fonts
    font-family: "SpaceMono NF", "SpaceMono Nerd Font", "JetBrains Mono NF",
        "JetBrains Mono Nerd Font", monospace;
}

@mixin techfont {
    // Monospace for sys info n stuff. Doesn't have to be a nerd font, but it's cool.
    font-family: "JetBrains Mono NF", "JetBrains Mono Nerd Font",
        "JetBrains Mono NL", "SpaceMono NF", "SpaceMono Nerd Font", monospace;
}

@mixin readingfont {
    // The most readable fonts, for a comfortable reading experience
    // in stuff like AI chat on sidebar
    font-family: "Readex Pro", "Lexend", "Noto Sans", sans-serif;
    // font-weight: 500;
}

@mixin subtext {
    color: $subtext;
}

@mixin actiontext {
    color: $actiontext;
}

$elevation_margin: 0.476rem;

@mixin elevation2 {
    box-shadow: 0px 2px 3px transparentize($shadow, 0.55);
    margin: $elevation_margin;
}

@mixin elevation2-margin {
    margin: $elevation_margin;
}

@mixin elevation2-padding {
    padding: $elevation_margin;
}

@mixin elevation3 {
    box-shadow: 0px 2px 5px $shadow;
    margin: $elevation_margin;
}

@mixin menu_decel {
    transition: 300ms cubic-bezier(0.1, 1, 0, 1);
}

@mixin menu_decel_fast {
    transition: 170ms cubic-bezier(0.1, 1, 0, 1);
}

@mixin menu_accel {
    transition: 160ms cubic-bezier(0.38, 0.04, 1, 0.07);
}

@mixin menu_accel_fast {
    transition: 100ms cubic-bezier(0.38, 0.04, 1, 0.07);
}

@mixin fluent_decel {
    transition: 200ms cubic-bezier(0.1, 1, 0, 1);
}

@mixin fluent_decel_long {
    transition: 1000ms cubic-bezier(0.1, 1, 0, 1);
}

@mixin fluent_accel {
    transition: 150ms cubic-bezier(0.42, 0, 1, 1);
}

@mixin noanim {
    transition: 0ms;
}

@mixin anim-enter {
    transition: 200ms cubic-bezier(0.05, 0.7, 0.1, 1);
}

@mixin anim-exit {
    transition: 150ms cubic-bezier(0.3, 0, 0.8, 0.15);
}

@mixin element_decel {
    transition: 300ms cubic-bezier(0, 0.55, 0.45, 1);
}

@mixin element_bounceOut {
    transition: transform 200ms cubic-bezier(0.34, 1.56, 0.64, 1);
}

@mixin element_accel {
    transition: 300ms cubic-bezier(0.55, 0, 1, 0.45);
}

@mixin element_easeInOut {
    transition: 300ms cubic-bezier(0.85, 0, 0.15, 1);
}

@mixin elevation-border-softer {
    border-top: 1px solid mix($surface, $onSurface, 86%);
    border-left: 1px solid mix($surface, $onSurface, 86%);
    border-right: 1px solid mix($surface, $onSurface, 90%);
    border-bottom: 1px solid mix($surface, $onSurface, 90%);
}

@mixin elevation-border {
    border-top: 1px solid $surfaceContainer;
    border-left: 1px solid $surfaceContainer;
    border-right: 1px solid $surfaceContainer;
    border-bottom: 1px solid $surfaceContainer;
}

@mixin button-minsize {
    min-width: 2.727rem;
    min-height: 2.727rem;
}

$white: white;
$black: black;

@function color_by_mode ($whiteColor, $darkColor) {
    @if $darkmode {
        @return $darkColor;
    }
    @else {
        @return $whiteColor;
    }
}

$black: #000;
$white: #fff;
$default_widget_bg: color_by_mode(#E0EBFC, #222222);
$default_element_bg: color_by_mode(#F6FCFE, #1F1F1F);

$colors: (
    'blue':    #0d6efd,
    'indigo':  #6610f2,
    'purple':  #6f42c1,
    'pink':    #d63384,
    'red':     #dc3545,
    'orange':  #fd7e14,
    'yellow':  #ffc107,
    'green':   #198754,
    'teal':    #20c997,
    'cyan':    #0dcaf0,
    'gray':     #adb5bd
);

@function shade-color($color, $percentage) {
    @return mix(black, $color, $percentage);
}

@function tint-color($color, $percentage) {
    @return mix(white, $color, $percentage);
}

$ncolors: ();
@each $key, $value in $colors {
    $ncolors: map.set($ncolors, $key + "-100", tint-color($value, 80%));
    $ncolors: map.set($ncolors, $key + "-200", tint-color($value, 60%));
    $ncolors: map.set($ncolors, $key + "-300", tint-color($value, 40%));
    $ncolors: map.set($ncolors, $key + "-400", tint-color($value, 20%));
    $ncolors: map.set($ncolors, $key + "-500", $value);
    $ncolors: map.set($ncolors, $key + "-600", shade-color($value, 20%));
    $ncolors: map.set($ncolors, $key + "-700", shade-color($value, 40%));
    $ncolors: map.set($ncolors, $key + "-800", shade-color($value, 60%));
    $ncolors: map.set($ncolors, $key + "-900", shade-color($value, 80%));
};

$primary:       map.get($ncolors, 'blue-500');
$secondary:     map.get($ncolors, 'gray-600');
$success:       map.get($ncolors, 'green-500');
$info:          map.get($ncolors, 'cyan-500');
$warning:       map.get($ncolors, 'yellow-500');
$danger:        map.get($ncolors, 'red-500');
$light:         map.get($ncolors, 'gray-100');
$dark:          map.get($ncolors, 'gray-900');

$spec_colors: (
    'widget': $default_widget_bg,
    'transparent': transparent,
    "primary":    $primary,
    "secondary":  $secondary,
    "success":    $success,
    "info":       $info,
    "warning":    $warning,
    "danger":     $danger,
    "light":      $light,
    "dark":       $dark
);

@each $key, $value in $spec_colors {
    .bg-#{$key} {
        background-color: #{$value};
    }

    .border-#{$key} {
        border: 0 solid #{$value};
    }

    .text-#{$key} {
        color: #{$value};
    }
};

@each $key, $value in $ncolors {
    .bg-#{$key} {
        background-color: #{$value};
    }

    .border-#{$key} {
        border: 0 solid #{$value};
    }

    .text-#{$key} {
        color: #{$value};
    }
};